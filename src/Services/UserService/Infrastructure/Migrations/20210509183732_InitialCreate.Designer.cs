// <auto-generated />
using System;
using Kwetter.Services.UserService.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Kwetter.Services.UserService.Infrastructure.Migrations
{
    [DbContext(typeof(UserDbContext))]
    [Migration("20210509183732_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Kwetter.Services.UserService.Domain.AggregatesModel.UserAggregate.UserAggregate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Kwetter.Services.UserService.Domain.AggregatesModel.UserAggregate.UserAggregate", b =>
                {
                    b.OwnsOne("Kwetter.Services.UserService.Domain.AggregatesModel.UserAggregate.UserProfile", "Profile", b1 =>
                        {
                            b1.Property<Guid>("UserAggregateId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(512)
                                .HasColumnType("character varying(512)");

                            b1.Property<string>("PictureUrl")
                                .IsRequired()
                                .HasMaxLength(512)
                                .HasColumnType("character varying(512)");

                            b1.HasKey("UserAggregateId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserAggregateId");
                        });

                    b.Navigation("Profile");
                });
#pragma warning restore 612, 618
        }
    }
}
