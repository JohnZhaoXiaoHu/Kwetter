name: "Builds and publish a docker image"
description: "Builds and publishes the docker image"
inputs:
  image: 
    description: "The docker image."
    required: true
  tag: 
    description: "The version tag."
    required: true
runs:
  using: "composite"
  steps:
    # Adds the Neuralm certificate for the registry
    - name: Add Neuralm certificate
      run: |
        echo "Create root certificate directory"
        sudo mkdir -p /usr/local/share/ca-certificates/${{ secrets.NEURALM_REGISTRY }}/
        echo "Create certificate"
        sudo printf "${{ secrets.NEURALM_CERTIFICATE }}" >> neuralm.crt
        echo "Create docker directory"
        sudo mkdir -p /etc/docker/
        echo "Create docker daemon json"
        sudo touch /etc/docker/daemon.json
        echo "Copy certificate to the ca-certificates directory"
        sudo cp neuralm.crt /usr/local/share/ca-certificates/${{ secrets.NEURALM_REGISTRY }}/ca.crt
        echo "Create neuralm certificate directory in docker"
        sudo mkdir -p /etc/docker/certs.d/${{ secrets.NEURALM_REGISTRY }}/
        echo "Copy certificate to the docker directory"
        sudo cp neuralm.crt /etc/docker/certs.d/${{ secrets.NEURALM_REGISTRY }}/ca.crt
        echo "Update CA certificates"
        sudo update-ca-certificates
        echo "Restart docker"
        sudo systemctl daemon-reload
        sudo systemctl restart docker

    # Prepares the docker build
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    # Caches the docker layers
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    # Logs in to the neuralm registry
    - name: Login to Neuralm Docker registry
      uses: docker/login-action@v1 
      with:
        registry: ${{ secrets.NEURALM_REGISTRY }}
        username: ${{ secrets.NEURALM_DOCKER_USERNAME }}
        password: ${{ secrets.NEURALM_DOCKER_PASSWORD }}
    
    # Builds and publishes the image
    - name: Build and push Docker image 
      run: |
        echo "Building docker image"
        docker build -t ${{ secrets.NEURALM_REGISTRY }}/${{ inputs.image }}:${{ inputs.tag }} -f ./${{ inputs.image }}.Dockerfile .
        echo "Publishing docker image"
        docker push ${{ secrets.NEURALM_REGISTRY }}/${{ inputs.image }}:${{ inputs.tag }}
    